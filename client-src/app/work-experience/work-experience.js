import * as React from 'react';
import * as ReactDom from 'react-dom';

import {RoleList} from './role-list';
import {WorkRoleForm} from './comment-form';

var WorkExperience = React.createClass({
  loadCommentsFromServer: function() {

    fetch(this.props.url)
      .then(response => response.json())
      .then(json => {
        this.setState({data: json});
        console.log(json);
      });

  },

  handleCommentSubmit: function(comment) {
    console.log('send to server', comment);

    //var comments = this.state.data;
    //// Optimistically set an id on the new comment. It will be replaced by an
    //// id generated by the server. In a production application you would likely
    //// not use Date.now() for this and would have a more robust system in place.
    //comment.id = Date.now();
    //var newComments = comments.concat([comment]);
    //console.log('Set state to:', newComments)
    //this.setState({data: newComments});

    fetch(this.props.url, {
      method: 'post',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        "company": comment.company,
        "start":  new Date(1992, 10, 17),
        "end":  new Date(1993, 9, 1),
        "description": comment.text,
        "role": "from form",
        "id": Date.now()
      })
    })
  },

  getInitialState: function() {
    return {data: []};
  },

  componentDidMount: function() {
    this.loadCommentsFromServer();
    setInterval(this.loadCommentsFromServer, this.props.pollInterval);
  },

  render: function() {
    return (
      <div className="workExperience">
        <h4>Work Experience</h4>
        <RoleList workRoles={this.state.data} />
        <WorkRoleForm onCommentSubmit={this.handleCommentSubmit} />
      </div>
    );
  }

});

export {WorkExperience}
