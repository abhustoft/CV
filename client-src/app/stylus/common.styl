/* prevents spacing of a given element if it's the last child */
prevent-last-child-spacing(element = '*', property = 'padding-bottom')
  if element is '*'
    element = unquote(element)

  & > {element}:last-child
    {property} 0


/* Sets an input tag's placeholder styles; called within the INPUT itself */
set-placeholder-style(prop, value)
    &::-webkit-input-placeholder
            {prop} value
    &::-moz-input-placeholder
            {prop} value


/*
// SCSS
.block {
  background-color: white;

  &--active {
    background-color: gray;
  }

  &__element {
    color: red;

    &--active {
      color: blue;
    }
  }

  &__another-element {
    background-color: red;

    &--active {
      background-color: blue;
    }
  }
}

-------------------------------
.block
  +e(child)
    background: teal
    +m(featured, important)
      background: crimson
gracefully compiles into

.block__child {background: teal;}
.block__child--featured, .block__child--important {background: crimson;}

The mixins:
=e($elements...)
  $selector: ()
  @each $element in $elements
    $selector: append($selector, unquote("&__" + $element), comma)
  #{$selector}
    @content
=m($modifiers...)
  $selector: ()
  @each $modifier in $modifiers
    $selector: append($selector, unquote("&--" + $modifier), comma)
  #{$selector}
    @content
------------------------------

*/





